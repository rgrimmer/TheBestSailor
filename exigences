Les éléments :
Un serveur : C'est l'élément principale, le main. C'est lui qui contiendera la partie et la file d'attente
Un client : C'est l'élément distant avec qui le client va communiquer. C'est le joueur.
Une partie : Une partie contient la liste des joueurs, les élément du jeux et la boucle de jeux.
Une file d'attente : C'est là que les joueurs sont quand ils ne sont pas dans une partie.

Exigence coté server :
- Un serveur doit pouvoir tourner en permanence
- Un serveur ne peut avoir qu'une partie en cours à la fois.

Exigence en rapport à la file d'attente :
- Un joueur qui n'est pas en partie est forcément dans la file d'attente.
- Lorsque un joueur se déconnecte de la file d'attente, il est retiré de celle-ci. (Il est déconnecté du serveur)

Exigence en rapport à la partie :
- Une partie commence au bout de 30s.
- Une partie ne peut commencer sans joueurs. Si une partie doit commencer sans joueurs. Le décompte recommence.
- L'exigence précedente pourra être améliorée en commençant le décompte qu'à la première connexion d'un joueur.
- Une partie n'ayant plus de joueur se termine.
- Lorsque une partie commence, tous les joueurs en file d'attente son dirigé vers la partie.
- Lorsque une partie se termine, tous les joueurs participants son mis dans la file d'attente.
- Lorsque un joueur se déconnecte d'une partie, il est retiré de celle-ci. (Il est déconnecté du serveur
- Lorsqu'un joueur gagne la partie. Tous les autres joueurs son notifié par un message. 
Au bout de 10s, tous les joueurs sont redirigé vers la file d'attente. 
La parti se terminera car il n'y a plus de joueurs.

TODO : Exigence en rapport au règle du jeux :
- Collision avec la terre
- Collision avec les autres
- Condition de victoire
- Détection de balise (checkpoint)

Protocole d'une partie :
- Une partie est créer à la fin du décompte.
- On envoi les éléments (TCP ou UDP avec validation)
- On attent que les joueurs soit prêt par un message READY de tous les joueurs (Qu'il est créé les éléments) (TCP ou UDP avec validation)
- Si aucune réponse d'un joueur au bout de 10s on le déconnect
- On démarre la boucle de jeu

Exigence pour le client :
- Un joueur doit pouvoir se connecter quand il le souhaite dans la limite des capacites du serveur
- Un joueur qui vient de se connecter est mis en attente.
- Un joueur peut demander à recommencer une partie. Tous les joueurs son remis dans la file d'attente.
- Un joueur peut quitter à tout moment.

Protocole serveur :
-1) Il lance un thread d'attente de connection.
-2) Il lance le chrono de début de partie.
-3)[IMPLICIT : Le chrono terminé et il y a des joueurs dans la file d'attente]
-4) Il créer une partie.
-5) Il "envoi la partie" aux joueurs.
-6)[IMPLICIT : Les joueurs sont prets]
-7) Il lance la boucle de jeu
-8)[IMPLICIT : partie fini]
-9) [GOTO] 2

Protocole -1) Attente de connection :
-1.1) [Attente passive d'une connection d'un joueur]
-1.2) Enregistrement du joueur dans la liste d'attente (id, nom, socketTCP)
-1.3) SI [Premier joueur se connectant au serveur]
-1.3a) Signaler premier joueur au serveur (Réinisialise le chrono ou lance le chrono)
-1.4) [GOTO] 1.1

Protocole -2) Lancer le chrono de début de partie :
-2.1) SI [Aucun joueur connecté]
-2.1a) [Attendre une notif de connexion]
-2.2) Lancer le chrono
-2.3) (Attendre la fin du chrono)

Protocole -4) Création d'une partie
-4.1) On génère une taille de carte
-4.2) On génère une graine pour le relief
-4.3) On génère une graine pour le vent
-4.4) On génère les balises
-4.5) On génère la position pour les bateaux
-4.6) On créé les éléments en mémoires


Données transmises :


Perspective :
Identification des joueurs par leur port/ip. Eviter la triche.
Ajout d'identification de joueurs. Dans le but d'avoir des scores persistant.
